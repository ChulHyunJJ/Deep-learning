{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"조철현 - _7 신경망 학습","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"02f34de2a3254de2add1f950d5fecf99":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_c2384f206fec4ea18ceb65f5c8a75833","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_d11d4d99b92a42cab835882ddde08905","IPY_MODEL_dd6eb70a4f994efa91d4b1b47db70e4a"]}},"c2384f206fec4ea18ceb65f5c8a75833":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"d11d4d99b92a42cab835882ddde08905":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_c2d0cb317a9b4846b8dfe65140a426e7","_dom_classes":[],"description":"100%","_model_name":"FloatProgressModel","bar_style":"success","max":2,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":2,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_492a456763a149e9b97ace9cf22cd7bc"}},"dd6eb70a4f994efa91d4b1b47db70e4a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_61f1573859b44855a4a12e76a84304c5","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 2/2 [03:12&lt;00:00, 96.00s/it]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_d4b85388b84845daa1c44f69e4c0c840"}},"c2d0cb317a9b4846b8dfe65140a426e7":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"492a456763a149e9b97ace9cf22cd7bc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"61f1573859b44855a4a12e76a84304c5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"d4b85388b84845daa1c44f69e4c0c840":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"nyjyu4FzUAVw","colab_type":"text"},"source":["# 신경망 학습"]},{"cell_type":"markdown","metadata":{"id":"VQvNez4qydhL","colab_type":"text"},"source":["## 단순한 신경망 구현 : Logic Gate"]},{"cell_type":"markdown","metadata":{"id":"-7te43hqyiiJ","colab_type":"text"},"source":["### 필요한 모듈 import"]},{"cell_type":"code","metadata":{"id":"Qf2F_YbdybBE","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601017057607,"user_tz":-540,"elapsed":1084,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}}},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","plt.style.use(['seaborn-whitegrid'])"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"orUoPmDcymhj","colab_type":"text"},"source":["### 하이퍼 파라미터(Hyper Parameter)"]},{"cell_type":"code","metadata":{"id":"bOAmMxo0ymDF","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601017058521,"user_tz":-540,"elapsed":1017,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}}},"source":["epochs = 1000\n","lr = 0.1"],"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"BjmLWgFVysnq","colab_type":"text"},"source":["### 유틸 함수들(Util Functions)"]},{"cell_type":"code","metadata":{"id":"Y4OMFGrjyq1c","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601017724732,"user_tz":-540,"elapsed":846,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}}},"source":["def sigmoid(x):\n","  return 1 / (1 + np.exp(-x))\n","\n","def mean_squared_error(pred_y, true_y):\n","  return 0.5 * np.sum((true_y - pred_y)**2)\n","\n","def cross_entropy_error(pred_y, true_y):\n","  if true_y.ndim==1:\n","    true_y = true_y.reshape(1, -1)\n","    pred_y = pred_y.reshape(1, -1)\n","\n","  delta = 1e-7\n","  return -np.sum(true_y * np.log(pred_y + delta))\n","\n","def cross_entropy_error_for_batch(pred_y, true_y):\n","  if true_y.ndim==1:\n","    true_y = true_y.reshape(1, -1)\n","    pred_y = pred_y.reshape(1, -1)\n","\n","  delta = 1e-7\n","  batch_size = pre_y.shape[0]\n","  return -np.sum(true_y * np.log(pred_y + delta)) / batch_size\n","\n","def cross_entropy_error_for_bin(pred_y, true_y):\n","  return 0.5 * np.sum((-true_y * np.log(pred_y) - (1 - true_y) * np.log(1- pred_y)))\n","\n","def softmax(a):\n","  exp_a = np.exp(a)\n","  sum_exp_a = np.sum(exp_a)\n","  y = exp_a / sum_exp_a\n","\n","  return y\n","\n","def differential(f, x):\n","  eps = 1e-5\n","  diff_value = np.zeros_like(x)\n","\n","  for i in range(x.shape[0]):\n","    temp_val = x[i]\n","\n","    x[i] = temp_val + eps\n","    f_h1 = f(x)\n","\n","    x[i] = temp_val - eps\n","    f_h2 = f(x)\n","\n","    diff_value[i] = (f_h1 - f_h2) / (2 * eps)\n","    x[i] = temp_val\n","\n","  return diff_value"],"execution_count":6,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"h5Z2LTT_y3i5","colab_type":"text"},"source":["### 신경망"]},{"cell_type":"code","metadata":{"id":"gMTjjYgdy3D8","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601018289090,"user_tz":-540,"elapsed":949,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}}},"source":["class LogicGateNet():\n","\n","  def __init__(self):\n","    def weight_init():\n","      np.random.seed(1)\n","      weights = np.random.randn(2)\n","      bias = np.random.rand(1)\n","\n","      return weights, bias\n","\n","    self.weights, self.bias = weight_init()\n","\n","  def predict(self, x):\n","    W = self.weights.reshape(-1, 1)\n","    b = self.bias\n","\n","    pred_y = sigmoid(np.dot(x, W) + b)\n","\n","    return pred_y\n","\n","  def loss(self, x, true_y):\n","    pred_y = self.predict(x)\n","    return cross_entropy_error_for_bin(pred_y, true_y)\n","\n","  def get_gradient(self, x, t):\n","    def loss_grad(grad):\n","      return self.loss(x, t)\n","\n","    grad_W = differential(loss_grad, self.weights)\n","    grad_B = differential(loss_grad, self.bias)\n","\n","    return grad_W, grad_B\n"],"execution_count":15,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wbNDoH_3zbGZ","colab_type":"text"},"source":["### AND Gate"]},{"cell_type":"markdown","metadata":{"id":"2P-ib8_RzHTh","colab_type":"text"},"source":["#### 모델 생성 및 학습"]},{"cell_type":"code","metadata":{"id":"rRiaACA6zGom","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":187},"executionInfo":{"status":"ok","timestamp":1601019324625,"user_tz":-540,"elapsed":787,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"eafd48c3-d7a0-4f9b-9e7a-042802b758fc"},"source":["AND = LogicGateNet()\n","\n","X = np.array([[0,0], [0,1], [1,0], [1,1]])\n","Y = np.array([[0],[0],[0],[1]])\n","\n","train_loss_list = list()\n","\n","for i in range(epochs):\n","  grad_W, grad_B = AND.get_gradient(X,Y)\n","\n","  AND.weights -= lr * grad_W\n","  AND.bias -= lr * grad_B\n","\n","  loss = AND.loss(X, Y)\n","  train_loss_list.append(loss)\n","\n","  if i % 100 == 99:\n","    print('Epoch: {} Cost: {}, Weights: {}, Bias: {}'.format(i+1, loss, AND.weights, AND.bias))"],"execution_count":51,"outputs":[{"output_type":"stream","text":["Epoch: 100 Cost: 0.6886489498077508, Weights: [1.56426876 0.79168393], Bias: [-2.14871589]\n","Epoch: 200 Cost: 0.4946368603067626, Weights: [2.01360719 1.71241131], Bias: [-3.07894028]\n","Epoch: 300 Cost: 0.3920165980751678, Weights: [2.42841657 2.29753793], Bias: [-3.79103207]\n","Epoch: 400 Cost: 0.3257214374794629, Weights: [2.794852   2.73235738], Bias: [-4.37257095]\n","Epoch: 500 Cost: 0.2786360133470194, Weights: [3.11636193 3.08408364], Bias: [-4.86571237]\n","Epoch: 600 Cost: 0.24328504683857205, Weights: [3.40015395 3.38235762], Bias: [-5.29433736]\n","Epoch: 700 Cost: 0.2157253655246455, Weights: [3.65300561 3.64264217], Bias: [-5.67349792]\n","Epoch: 800 Cost: 0.19363244428376314, Weights: [3.88044124 3.87412053], Bias: [-6.01340133]\n","Epoch: 900 Cost: 0.175532131279099, Weights: [4.08680123 4.08279091], Bias: [-6.32133891]\n","Epoch: 1000 Cost: 0.16043926933305935, Weights: [4.27548114 4.27284863], Bias: [-6.6027234]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"PZoyQv_czT7R","colab_type":"text"},"source":["#### 테스트"]},{"cell_type":"code","metadata":{"id":"-7CvWgc9zREa","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"executionInfo":{"status":"ok","timestamp":1601019327103,"user_tz":-540,"elapsed":794,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"39332f18-450f-48fd-903d-25314d782a15"},"source":["print(AND.predict(X))"],"execution_count":52,"outputs":[{"output_type":"stream","text":["[[0.00135483]\n"," [0.08867878]\n"," [0.08889176]\n"," [0.87496677]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"HoMXNiXWzts-","colab_type":"text"},"source":["### OR Gate"]},{"cell_type":"markdown","metadata":{"id":"DZ79pc4jzw3O","colab_type":"text"},"source":["#### 모델 생성 및 학습"]},{"cell_type":"code","metadata":{"id":"8gnLmAyQzuoL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":187},"executionInfo":{"status":"ok","timestamp":1601019331353,"user_tz":-540,"elapsed":1279,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"1191d525-7238-4986-e2f2-093608f21fd0"},"source":["OR = LogicGateNet()\n","X = np.array([[0,0], [0,1], [1,0], [1,1]])\n","Y_2 = np.array([[0],[1],[1],[1]])\n","\n","train_loss_list = list()\n","\n","for i in range(epochs):\n","  grad_W, grad_B = OR.get_gradient(X, Y_2)\n","\n","  OR.weights -= lr * grad_W\n","  OR.bias -= lr * grad_B\n","\n","  loss = OR.loss(X,Y_2)\n","  train_loss_list.append(loss)\n","\n","  if i % 100 == 99:\n","    print('Epoch: {} Cost: {}, Weights: {}, Bias: {}'.format(i+1, loss, OR.weights, OR.bias))"],"execution_count":53,"outputs":[{"output_type":"stream","text":["Epoch: 100 Cost: 0.49580923848037245, Weights: [2.45484353 1.40566594], Bias: [-0.14439625]\n","Epoch: 200 Cost: 0.3398674231512476, Weights: [2.98631846 2.39448393], Bias: [-0.67661178]\n","Epoch: 300 Cost: 0.2573360986184237, Weights: [3.45016595 3.08431266], Bias: [-1.03721585]\n","Epoch: 400 Cost: 0.20630142190061632, Weights: [3.85230067 3.60865952], Bias: [-1.30598633]\n","Epoch: 500 Cost: 0.1716549922114765, Weights: [4.20195872 4.03000824], Bias: [-1.52060015]\n","Epoch: 600 Cost: 0.14665018845489367, Weights: [4.50867681 4.38171478], Bias: [-1.6994397]\n","Epoch: 700 Cost: 0.12779768649443757, Weights: [4.78049264 4.68334611], Bias: [-1.8527641]\n","Epoch: 800 Cost: 0.11310517185394649, Weights: [5.0237707 4.9472786], Bias: [-1.98691756]\n","Epoch: 900 Cost: 0.10135180918369109, Weights: [5.24347159 5.18181684], Bias: [-2.10611973]\n","Epoch: 1000 Cost: 0.09174843008614507, Weights: [5.44346811 5.39279833], Bias: [-2.21332947]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"jWmEtX_VnLSI","colab_type":"text"},"source":["#### 테스트"]},{"cell_type":"code","metadata":{"id":"JwPpOs3-z2vU","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"executionInfo":{"status":"ok","timestamp":1601019333131,"user_tz":-540,"elapsed":613,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"870838ac-9e18-4820-845c-2836ca093f09"},"source":["print(OR.predict(X))"],"execution_count":54,"outputs":[{"output_type":"stream","text":["[[0.09855987]\n"," [0.9600543 ]\n"," [0.96195283]\n"," [0.9998201 ]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"JEBhczCIz57Q","colab_type":"text"},"source":["### NAND Gate"]},{"cell_type":"markdown","metadata":{"id":"TzQaaHKKz8sZ","colab_type":"text"},"source":["#### 모델 생성 및 학습"]},{"cell_type":"code","metadata":{"id":"h463QUQRz8PS","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":187},"executionInfo":{"status":"ok","timestamp":1601019340191,"user_tz":-540,"elapsed":751,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"79396065-b1a4-422b-b26f-3d7bbd7376e6"},"source":["NAND = LogicGateNet()\n","\n","X = np.array([[0,0], [0,1], [1,0], [1,1]])\n","Y_3 = np.array([[1],[1],[1],[0]])\n","\n","train_loss_list = list()\n","\n","for i in range(epochs):\n","  grad_W, grad_B = NAND.get_gradient(X,Y_3)\n","\n","  NAND.weights -= lr * grad_W\n","  NAND.bias -= lr * grad_B\n","\n","  loss = NAND.loss(X, Y_3)\n","  train_loss_list.append(loss)\n","\n","  if i % 100 == 99:\n","    print('Epoch: {} Cost: {}, Weights: {}, Bias: {}'.format(i+1, loss, NAND.weights, NAND.bias))"],"execution_count":55,"outputs":[{"output_type":"stream","text":["Epoch: 100 Cost: 0.7911738653764443, Weights: [-0.48972722 -1.25798774], Bias: [1.74566135]\n","Epoch: 200 Cost: 0.5430490957875922, Weights: [-1.51545093 -1.80261804], Bias: [2.79151756]\n","Epoch: 300 Cost: 0.42125913027366896, Weights: [-2.14614496 -2.26642639], Bias: [3.56506179]\n","Epoch: 400 Cost: 0.3456117101528016, Weights: [-2.607325   -2.66303355], Bias: [4.18521187]\n","Epoch: 500 Cost: 0.293129860518541, Weights: [-2.97696333 -3.00501941], Bias: [4.70528682]\n","Epoch: 600 Cost: 0.2543396786003746, Weights: [-3.28850585 -3.30365261], Bias: [5.1539571]\n","Epoch: 700 Cost: 0.22443918596780807, Weights: [-3.55912171 -3.56778782], Bias: [5.54869527]\n","Epoch: 800 Cost: 0.20067626330797955, Weights: [-3.7989077  -3.80411461], Bias: [5.90108417]\n","Epoch: 900 Cost: 0.1813412551760061, Weights: [-4.01441395 -4.01767547], Bias: [6.21926514]\n","Epoch: 1000 Cost: 0.16530944081725432, Weights: [-4.21019696 -4.21231432], Bias: [6.50920952]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"jR-rHaTU0Mga","colab_type":"text"},"source":["#### 테스트"]},{"cell_type":"code","metadata":{"id":"WpzKW6sm0Ghp","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"executionInfo":{"status":"ok","timestamp":1601019348004,"user_tz":-540,"elapsed":619,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"29daf0f5-e633-41e5-dc48-05ef92167f12"},"source":["print(NAND.predict(X))"],"execution_count":56,"outputs":[{"output_type":"stream","text":["[[0.99851256]\n"," [0.90861957]\n"," [0.90879523]\n"," [0.12861037]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"NiTWfSQ60Zl2","colab_type":"text"},"source":["### XOR Gate"]},{"cell_type":"markdown","metadata":{"id":"hmmL0VIu0bXq","colab_type":"text"},"source":["#### 모델 생성 및 학습"]},{"cell_type":"code","metadata":{"id":"0CGm0r1M0a9M","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":187},"executionInfo":{"status":"ok","timestamp":1601019350336,"user_tz":-540,"elapsed":693,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"46de849f-fe69-4d30-9b03-4626c5476a04"},"source":["XOR = LogicGateNet()\n","\n","X = np.array([[0,0], [0,1], [1,0], [1,1]])\n","Y_4 = np.array([[0],[1],[1],[0]])\n","\n","train_loss_list = list()\n","\n","for i in range(epochs):\n","  grad_W, grad_B = XOR.get_gradient(X,Y_4)\n","\n","  XOR.weights -= lr * grad_W\n","  XOR.bias -= lr * grad_B\n","\n","  loss = XOR.loss(X, Y_4)\n","  train_loss_list.append(loss)\n","\n","  if i % 100 == 99:\n","    print('Epoch: {} Cost: {}, Weights: {}, Bias: {}'.format(i+1, loss, XOR.weights, XOR.bias))"],"execution_count":57,"outputs":[{"output_type":"stream","text":["Epoch: 100 Cost: 1.402685224545991, Weights: [ 0.47012771 -0.19931523], Bias: [-0.16097708]\n","Epoch: 200 Cost: 1.3879445622846385, Weights: [ 0.1572739  -0.03387161], Bias: [-0.07321056]\n","Epoch: 300 Cost: 1.386492030048373, Weights: [0.05525161 0.00089673], Bias: [-0.03330094]\n","Epoch: 400 Cost: 1.3863236205351996, Weights: [0.02049628 0.00504503], Bias: [-0.01514784]\n","Epoch: 500 Cost: 1.386299474364679, Weights: [0.0080051  0.00361297], Bias: [-0.00689034]\n","Epoch: 600 Cost: 1.3862953430687444, Weights: [0.00326661 0.00201812], Bias: [-0.00313421]\n","Epoch: 700 Cost: 1.3862945581495083, Weights: [0.00137938 0.00102449], Bias: [-0.00142566]\n","Epoch: 800 Cost: 1.38629440139037, Weights: [0.00059716 0.00049628], Bias: [-0.00064849]\n","Epoch: 900 Cost: 1.3862943694120307, Weights: [0.00026303 0.00023435], Bias: [-0.00029498]\n","Epoch: 1000 Cost: 1.386294362832352, Weights: [0.0001172  0.00010905], Bias: [-0.00013418]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Cy-ktElI0o5P","colab_type":"text"},"source":["#### 테스트"]},{"cell_type":"code","metadata":{"id":"GWAJAJ_T0oqm","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"executionInfo":{"status":"ok","timestamp":1601019355466,"user_tz":-540,"elapsed":626,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"0acd97f3-8549-42a4-b03d-48b53761e313"},"source":["print(XOR.predict(X))"],"execution_count":58,"outputs":[{"output_type":"stream","text":["[[0.49996646]\n"," [0.49999372]\n"," [0.49999575]\n"," [0.50002302]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"VAlq_-6E1nIq","colab_type":"text"},"source":["#### 2층 신경망으로 XOR 게이트 구현(1)\n","\n","- 얕은 신경망, Shallow Neural Network\n","\n","- 두 논리게이트(NAND, OR)를 통과하고  \n","  AND 게이트로 합쳐서 구현\n","\n","- 06 신경망 구조 참고"]},{"cell_type":"code","metadata":{"id":"mr7nYMG20jTo","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601019358534,"user_tz":-540,"elapsed":715,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}}},"source":["X = np.array([[0,0], [0,1], [1,0], [1,1]])\n","Y_5 = np.array([[0], [1], [1], [0]])\n","\n","s1 = NAND.predict(X)\n","s2 = OR.predict(X)\n","X_2 = np.array([s1, s2]).T.reshape(-1,2)"],"execution_count":59,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nkTDx8Ah1xHY","colab_type":"text"},"source":["#### 테스트"]},{"cell_type":"code","metadata":{"id":"LK2iD5A91yWQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"executionInfo":{"status":"ok","timestamp":1601019366361,"user_tz":-540,"elapsed":793,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"3b7508f0-c151-4a05-bfde-5c0bfa8e877c"},"source":["print(AND.predict(X_2))"],"execution_count":60,"outputs":[{"output_type":"stream","text":["[[0.12870357]\n"," [0.79966936]\n"," [0.80108545]\n"," [0.14420781]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"i-SK4G262Agn","colab_type":"text"},"source":["#### 2층 신경망으로 XOR 게이트 구현(2)\n","- 클래스로 구현"]},{"cell_type":"code","metadata":{"id":"zXHb0qxAQJ4L","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601020696550,"user_tz":-540,"elapsed":1238,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}}},"source":["class XORNet():\n","\n","  def __init__(self):\n","    np.random.seed(1)\n","\n","    def weight_init():\n","      params = {}\n","      params['w_1'] = np.random.randn(2)\n","      params['b_1'] = np.random.rand(2)\n","      params['w_2'] = np.random.randn(2)\n","      params['b_2'] = np.random.rand(2)\n","      return params\n","\n","    self.params = weight_init()\n","\n","  def predict(self, x):\n","    W_1, W_2 = self.params['w_1'].reshape(-1, 1), self.params['w_2'].reshape(-1, 1)\n","    B_1, B_2 = self.params['b_1'], self.params['b_2']\n","\n","    A1 = np.dot(x, W_1) + B_1\n","    Z1 = sigmoid(A1)\n","    A2 = np.dot(Z1, W_2) + B_2\n","    pred_y = sigmoid(A2)\n","\n","    return pred_y\n","\n","  def loss(self, x, true_y):\n","    pred_y = self.predict(x)\n","    return cross_entropy_error_for_bin(pred_y, true_y)\n","\n","  def get_gradient(self, x, t):\n","    def loss_grad(grad):\n","      return self.loss(x, t)\n","\n","    grads = {}\n","    grads['w_1'] = differential(loss_grad, self.params['w_1'])\n","    grads['b_1'] = differential(loss_grad, self.params['b_1'])\n","    grads['w_2'] = differential(loss_grad, self.params['w_2'])\n","    grads['b_2'] = differential(loss_grad, self.params['b_2'])\n","    \n","    return grads"],"execution_count":76,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"lplK_x0l2YLh","colab_type":"text"},"source":["#### 하이퍼 파라미터(Hyper Parameter)\n","- 재조정"]},{"cell_type":"code","metadata":{"id":"qf-3wWSv2b7l","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601020669919,"user_tz":-540,"elapsed":1100,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}}},"source":["lr = 0.3"],"execution_count":73,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"lmHKd45d2JbJ","colab_type":"text"},"source":["#### 모델 생성 및 학습"]},{"cell_type":"code","metadata":{"id":"cQNd3XVd2Gj7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":187},"executionInfo":{"status":"ok","timestamp":1601020698691,"user_tz":-540,"elapsed":1509,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"13a8b971-760b-46ae-ed22-22e00906d677"},"source":["XOR = XORNet()\n","X = np.array([[0,0], [0,1], [1,0], [1,1]])\n","Y_5 = np.array([[0], [1], [1], [0]])\n","\n","train_loss_list = list()\n","\n","for i in range(epochs):\n","  grads = XOR.get_gradient(X, Y_5)\n","\n","  for key in ('w_1','b_1','w_2','b_2'):\n","    XOR.params[key] -= lr * grads[key]\n","\n","  loss = XOR.loss(X, Y_5)\n","  train_loss_list.append(loss)\n","\n","  if i % 100 == 99:\n","    print('Epoch: {}, Cost: {}'.format(i+1, loss))"],"execution_count":77,"outputs":[{"output_type":"stream","text":["Epoch: 100, Cost: 2.583421249698633\n","Epoch: 200, Cost: 0.6522444536921509\n","Epoch: 300, Cost: 0.2505164706224011\n","Epoch: 400, Cost: 0.14964904919215682\n","Epoch: 500, Cost: 0.10570445867339147\n","Epoch: 600, Cost: 0.08140304398010792\n","Epoch: 700, Cost: 0.06606149912983031\n","Epoch: 800, Cost: 0.05552519160639898\n","Epoch: 900, Cost: 0.04785478827751799\n","Epoch: 1000, Cost: 0.042027122418401175\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"IIV_GsoG2eDs","colab_type":"text"},"source":["#### 테스트"]},{"cell_type":"code","metadata":{"id":"Dpr0nZhc2Szr","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"executionInfo":{"status":"ok","timestamp":1601020730760,"user_tz":-540,"elapsed":969,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"4afc6da1-61ba-4bfe-b995-cdecad54e542"},"source":["print(XOR.predict(X))"],"execution_count":78,"outputs":[{"output_type":"stream","text":["[[0.00846377 0.00846377]\n"," [0.98354369 0.98354369]\n"," [0.99163498 0.99163498]\n"," [0.0084976  0.0084976 ]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"_1IuDL8R7wrx","colab_type":"text"},"source":["## 다중 클래스 분류 : MNIST Dataset"]},{"cell_type":"markdown","metadata":{"id":"9CiJ5Gmq9Wpa","colab_type":"text"},"source":["### 배치 처리\n","- 학습 데이터 전체를 한번에 진행하지 않고  \n","  일부 데이터(샘플)을 확률적으로 구해서 조금씩 나누어 진행\n","\n","- 확률적 경사 하강법(Stochastic Gradient Descent) 또는  \n","  미니 배치 학습법(mini-batch learning)이라고도 부름"]},{"cell_type":"markdown","metadata":{"id":"YUDNWwj49byH","colab_type":"text"},"source":["#### 신경망 구현 : MNIST "]},{"cell_type":"markdown","metadata":{"id":"WjBRQYlP74GM","colab_type":"text"},"source":["#### 필요한 모듈 임포트"]},{"cell_type":"code","metadata":{"id":"h0lJbkuW71lm","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601022438438,"user_tz":-540,"elapsed":2574,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}}},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","import time\n","from tqdm.notebook import tqdm"],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"MDvtEiD77_gu","colab_type":"text"},"source":["#### 데이터 로드"]},{"cell_type":"code","metadata":{"id":"4WL7zXMl_uo9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1601022440637,"user_tz":-540,"elapsed":2099,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"f3e8a1c7-d20d-42ce-ac4c-38e66c4d5fb0"},"source":["mnist = tf.keras.datasets.mnist\n","\n","(x_train, y_train), (x_test, y_test) = mnist.load_data()"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11493376/11490434 [==============================] - 0s 0us/step\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"e_rNg5Jn8FRA","colab_type":"text"},"source":["#### 데이터 확인"]},{"cell_type":"code","metadata":{"id":"u4wpsQGA8BOO","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"executionInfo":{"status":"ok","timestamp":1601022440646,"user_tz":-540,"elapsed":542,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"f9d9b6b7-5abe-4772-8de5-febdf37031f8"},"source":["print(x_train.shape)\n","print(y_train.shape)\n","\n","print(x_test.shape)\n","print(y_test.shape)"],"execution_count":6,"outputs":[{"output_type":"stream","text":["(60000, 28, 28)\n","(60000,)\n","(10000, 28, 28)\n","(10000,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pU7nvkHO8IFR","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"status":"ok","timestamp":1601022442515,"user_tz":-540,"elapsed":1737,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"f284938d-2d3a-47cc-a0c9-cf47606ad357"},"source":["img = x_train[0]\n","print(img.shape)\n","\n","plt.imshow(img, cmap='gray')\n","plt.show()"],"execution_count":7,"outputs":[{"output_type":"stream","text":["(28, 28)\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"WbBA1Kl18KGT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1601022442516,"user_tz":-540,"elapsed":953,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"ce677c46-80c1-4f0c-e603-d521273f340f"},"source":["y_train[0]"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"MTFu8i-z8U_C","colab_type":"text"},"source":["#### 데이터 전처리 (Data Preprocessing)"]},{"cell_type":"code","metadata":{"id":"q76pjKDVftHJ","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601022443667,"user_tz":-540,"elapsed":819,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}}},"source":["def flatten_for_mnist(x):\n","  temp = np.zeros((x.shape[0], x[0].size))\n","\n","  for idx, data in enumerate(x):\n","    temp[idx, :] = data.flatten()\n","\n","  return temp"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"vvMWrDOR8Mns","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"executionInfo":{"status":"ok","timestamp":1601022450431,"user_tz":-540,"elapsed":6887,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"2aacfc76-ee41-4e3f-ee5a-d75027188259"},"source":["x_train, x_test = x_train / 255.0, x_test / 255.0\n","\n","x_train = flatten_for_mnist(x_train)\n","x_test = flatten_for_mnist(x_test)\n","\n","print(x_train.shape)\n","print(x_test.shape)\n","\n","y_train_ohe = tf.one_hot(y_train, depth=10).numpy()\n","y_test_ohe = tf.one_hot(y_test, depth=10).numpy()\n","\n","print(y_train_ohe.shape)\n","print(y_test_ohe.shape)"],"execution_count":10,"outputs":[{"output_type":"stream","text":["(60000, 784)\n","(10000, 784)\n","(60000, 10)\n","(10000, 10)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9LjpWz0dotJs","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1601022450432,"user_tz":-540,"elapsed":6258,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"c731565d-854d-4a03-ae18-b73185aec14d"},"source":["print(x_train[0].max(), x_train[0].min())\n","print(y_train_ohe[0])"],"execution_count":11,"outputs":[{"output_type":"stream","text":["1.0 0.0\n","[0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"5GUaa92Y9RhY","colab_type":"text"},"source":["#### 하이퍼 파라미터(Hyper Parameter)"]},{"cell_type":"code","metadata":{"id":"sk3FXXLi9Th5","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601022450432,"user_tz":-540,"elapsed":5065,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}}},"source":["epochs = 2\n","lr = 0.1\n","batch_size = 100\n","train_size = x_train.shape[0]"],"execution_count":12,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5lMJ0h8p8iZl","colab_type":"text"},"source":["#### 사용되는 함수들(Util Functions)"]},{"cell_type":"code","metadata":{"id":"bSlqZ2Xx8hFn","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601022450433,"user_tz":-540,"elapsed":3872,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}}},"source":["def sigmoid(x):\n","  return 1 / (1 + np.exp(-x))\n","\n","def mean_squared_error(pred_y, true_y):\n","  return 0.5 * np.sum((true_y - pred_y)**2)\n","\n","def cross_entropy_error(pred_y, true_y):\n","  if true_y.ndim==1:\n","    true_y = true_y.reshape(1, -1)\n","    pred_y = pred_y.reshape(1, -1)\n","\n","  delta = 1e-7\n","  return -np.sum(true_y * np.log(pred_y + delta))\n","\n","def cross_entropy_error_for_batch(pred_y, true_y):\n","  if true_y.ndim==1:\n","    true_y = true_y.reshape(1, -1)\n","    pred_y = pred_y.reshape(1, -1)\n","\n","  delta = 1e-7\n","  batch_size = pre_y.shape[0]\n","  return -np.sum(true_y * np.log(pred_y + delta)) / batch_size\n","\n","def cross_entropy_error_for_bin(pred_y, true_y):\n","  return 0.5 * np.sum((-true_y * np.log(pred_y) - (1 - true_y) * np.log(1- pred_y)))\n","\n","def softmax(a):\n","  exp_a = np.exp(a)\n","  sum_exp_a = np.sum(exp_a)\n","  y = exp_a / sum_exp_a\n","\n","  return y\n","\n","def differential_1d(f, x):\n","  \n","  eps = 1e-5\n","  diff_value = np.zeros_like(x)\n","\n","  for i in range(x.shape[0]):\n","    temp_val = x[i]\n","\n","    x[i] = temp_val + eps\n","    f_h1 = f(x)\n","\n","    x[i] = temp_val - eps\n","    f_h2 = f(x)\n","\n","    diff_value[i] = (f_h1 - f_h2) / (2 * eps)\n","    x[i] = temp_val\n","\n","  return diff_value\n","\n","def differential_2d(f, X):\n","  if X.ndim == 1:\n","    return differential_1d(f, X)\n","  else:\n","    grad = np.zeros_like(X)\n","\n","    for idx, x in enumerate(X):\n","      grad[idx] = differential_1d(f, x)\n","\n","    return grad"],"execution_count":13,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sSoV9fyj8_u7","colab_type":"text"},"source":["#### 2층 신경망으로 구현"]},{"cell_type":"code","metadata":{"id":"XBObD5Fw89HI","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601022557385,"user_tz":-540,"elapsed":1353,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}}},"source":["class MyModel():\n","\n","  def __init__(self):\n","\n","    def weight_init(input_nodes, hidden_nodes, output_units):\n","      np.random.seed(777)\n","\n","      params = {}\n","      params['w_1'] = 0.01 * np.random.randn(input_nodes, hidden_nodes)\n","      params['b_1'] = np.zeros(hidden_nodes)\n","      params['w_2'] = 0.01 * np.random.randn(hidden_nodes, output_units)\n","      params['b_2'] = np.zeros(output_units)\n","      return params\n","\n","    self.params = weight_init(784, 64, 10)\n","\n","  def predict(self, x):\n","    W_1, W_2 = self.params['w_1'], self.params['w_2']\n","    B_1, B_2 = self.params['b_1'], self.params['b_2']\n","\n","    A1 = np.dot(x, W_1) + B_1\n","    Z1 = sigmoid(A1)\n","\n","    A2 = np.dot(Z1, W_2) + B_2\n","    pred_y = softmax(A2)\n","\n","    return pred_y\n","\n","  def loss(self, x, true_y):\n","    pred_y = self.predict(x)\n","    return cross_entropy_error_for_bin(pred_y, true_y)\n","\n","  def accuracy(self, x, true_y):\n","    pred_y = self.predict(x)\n","    y_argmax = np.argmax(pred_y, axis=1)\n","    t_argmax = np.argmax(true_y, axis=1)\n","\n","    accuracy = np.sum(y_argmax == t_argmax) / float(x.shape[0])\n","\n","    return accuracy\n","\n","  def get_gradient(self, x, t):\n","    def loss_grad(grad):\n","      return self.loss(x, t)\n","\n","    grads = {}\n","    grads['w_1'] = differential_2d(loss_grad, self.params['w_1'])\n","    grads['b_1'] = differential_2d(loss_grad, self.params['b_1'])\n","    grads['w_2'] = differential_2d(loss_grad, self.params['w_2'])\n","    grads['b_2'] = differential_2d(loss_grad, self.params['b_2'])\n","    \n","    return grads"],"execution_count":16,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"maKNIlK-xJ5k","colab_type":"text"},"source":["#### 모델 생성 및 학습\n","- 시간 많이 소요"]},{"cell_type":"code","metadata":{"id":"XSEARgNIop8t","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":117,"referenced_widgets":["02f34de2a3254de2add1f950d5fecf99","c2384f206fec4ea18ceb65f5c8a75833","d11d4d99b92a42cab835882ddde08905","dd6eb70a4f994efa91d4b1b47db70e4a","c2d0cb317a9b4846b8dfe65140a426e7","492a456763a149e9b97ace9cf22cd7bc","61f1573859b44855a4a12e76a84304c5","d4b85388b84845daa1c44f69e4c0c840"]},"executionInfo":{"status":"ok","timestamp":1601022750098,"user_tz":-540,"elapsed":192881,"user":{"displayName":"조철현","photoUrl":"","userId":"00177750111141030520"}},"outputId":"fd90dc1f-0edd-4dcd-ff3b-28fafa0f7914"},"source":["model = MyModel()\n","\n","train_loss_list = list()\n","train_acc_list = list()\n","test_acc_list = list()\n","iter_per_epoch = max(train_size / batch_size, 1)\n","\n","start_time = time.time()\n","for i in tqdm(range(epochs)):\n","\n","  batch_idx = np.random.choice(train_size, batch_size)\n","  x_batch = x_train[batch_idx]\n","  y_batch = y_train_ohe[batch_idx]\n","\n","  grads = model.get_gradient(x_batch, y_batch)\n","\n","  for key in grads.keys():\n","    model.params[key] -= lr * grads[key]\n","\n","  loss = model.loss(x_batch, y_batch)\n","  train_loss_list.append(loss)\n","\n","  train_accuracy = model.accuracy(x_train, y_train_ohe)\n","  test_accuracy = model.accuracy(x_test, y_test_ohe)\n","  train_acc_list.append(train_accuracy)\n","  test_acc_list.append(test_accuracy)\n","\n","  print('Epoch: {}, Cost: {}, Train Accuracy: {}, Test Accuracy: {}'.format(i+1, loss, train_accuracy, test_accuracy))\n","\n","end_time = time.time()\n","\n","print('총 학습 소요시간: {:.3f}s'.format(end_time - start_time))"],"execution_count":17,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"02f34de2a3254de2add1f950d5fecf99","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, max=2.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Epoch: 1, Cost: 465.9060502359863, Train Accuracy: 0.10441666666666667, Test Accuracy: 0.1028\n","Epoch: 2, Cost: 361.8440950218958, Train Accuracy: 0.09751666666666667, Test Accuracy: 0.0974\n","\n","총 학습 소요시간: 192.006s\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"b7nL8f20x4zl","colab_type":"text"},"source":["### 모델의 결과\n","- 모델은 학습이 잘 될 수도, 잘 안될 수도 있음\n","\n","- 만약, 학습이 잘 되지 않았다면,  \n","  학습이 잘 되기 위해서 어떠한 조치를 취해야 하는가?\n","  - 다양한 학습관련 기술이 존재"]}]}